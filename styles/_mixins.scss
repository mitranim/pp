@import './node_modules/stylific/scss/_variables';

@mixin sm {
  @media (max-width: $sf-breakpoint-sm - 1) {
    @content;
  }
}

@mixin gt-sm {
  @media (min-width: $sf-breakpoint-sm) {
    @content;
  }
}

@mixin gt-md {
  @media (min-width: $sf-breakpoint-md) {
    @content;
  }
}

/**
 * Scales the given rule by different percentages depending on display width.
 */
@mixin media-mix($rule, $value) {
  @include sm {#{$rule}: $value * 0.6}
  @include gt-sm {#{$rule}: $value * 0.8}
  @include gt-md {#{$rule}: $value}
}

/**
 * Scales the given rule inversely by different percentages depending on
 * display width.
 */
@mixin media-mix-inverse($rule, $value) {
  @include sm {#{$rule}: $value}
  @include gt-sm {#{$rule}: $value * 0.8}
  @include gt-md {#{$rule}: $value * 0.6}
}

@mixin media-prefixed($class-name) {
  .#{$class-name} {@content;}
  @include sf-eq-sm {
    .sm-#{$class-name} {@content;}
  }
  @include sf-eq-md {
    .md-#{$class-name} {@content;}
  }
  @include sf-gt-md {
    .lg-#{$class-name} {@content;}
  }
}

// Group of typical rules for a cover background image.
@mixin background-cover {
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;
}

@mixin image-backdrop {
  background-color: gray;
}

// Pre-override default link mixin.
@mixin sf-link-decorations {
  border-bottom: 1px dotted;
  border-color: inherit;
  background-color: rgba($sf-color-text, 0.03);
  color: $color-link;
  &:visited {
    color: lighten($color-link, 10%);
  }
}

@mixin sf-text-ellipsis {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  // display: inline-block;
  // align-self: center;
}

@mixin shadow-inset($color: null) {
  @if $color {
    box-shadow: #{$shadow-inset} #{$color};
  }
  @if not $color {
    box-shadow: #{$shadow-inset};
  }
}

@mixin svg-custom($name) {
  &.sf-icon-#{$name} {@include bg-svg-custom($name);}
}

@mixin bg-svg-custom($name) {
  $path: '#{$svg-custom}#{$name}.svg';
  background-image: url($path);
}

@mixin fa-icon-inline {
  @extend .fa;
  vertical-align: -0.1em;
}

@mixin text-placeholder {
  color: rgba($sf-color-text, 0.5);
}

@mixin centered-padded {
  @include sf-flex-host-center;
  padding: 0.5 * $sf-space $sf-space;
  font-size: 1.5em;
}

/**
 * Layout
 */

@mixin fit-full {
  position: absolute;
  @include sf-trbl(0, 0, 0, 0);
  height: 100%;
  width: 100%;
  margin: 0;
  @include sf-scroll-v;
}

@mixin fit-left-half {
  position: absolute;
  @include sf-trbl(0, 50%, 0, 0);
  height: 100%;
  width: 50%;
  margin: 0;
  @include sf-scroll-v;
}

@mixin fit-right-half {
  position: absolute;
  @include sf-trbl(0, 0, 0, 50%);
  height: 100%;
  width: 50%;
  margin: 0;
  @include sf-scroll-v;
}

@mixin fit-auto {
  position: relative;
  width: 100%;
  height: 100%;
}

@mixin fit-corner-top-right {
  position: absolute;
  z-index: 1;
  top: 0;
  right: 0;
}

@mixin fit-corner-top-right-spaced {
  position: absolute;
  z-index: 1;
  top: $sf-space;
  right: $sf-space;
}

@mixin sticky {
  position: -webkit-sticky;
  position: sticky;
}
